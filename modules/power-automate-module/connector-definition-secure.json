{
  "swagger": "2.0",
  "info": {
    "title": "Company Data Connector",
    "description": "Connect to your company's data sources including SharePoint, Exchange, Teams, and OneDrive through your deployed M365 Copilot Plugin infrastructure",
    "version": "1.0.0",
    "contact": {
      "name": "Company Data API Support",
      "email": "support@boopasbageldeli.onmicrosoft.com"
    }
  },
  "host": "copilot-plugin-func-f46zzw7hhsh2q.azurewebsites.net",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth2_auth": {
      "x-ms-client-secret": "@Microsoft.KeyVault(SecretUri=https://kvf46zzw7hdeclarat.vault.azure.net/secrets/azure-client-secret/)",
      "flow": "accessCode",
      "type": "oauth2",
      "tokenUrl": "https://login.microsoftonline.com/de96b383-5f31-4895-9b41-88f3b7435919/oauth2/v2.0/token",
      "scopes": {
        "https://graph.microsoft.com/.default": "Access company data through Microsoft Graph"
      },
      "authorizationUrl": "https://login.microsoftonline.com/de96b383-5f31-4895-9b41-88f3b7435919/oauth2/v2.0/authorize",
      "x-ms-client-id": "@Microsoft.KeyVault(SecretUri=https://kvf46zzw7hdeclarat.vault.azure.net/secrets/azure-client-id/)"
    }
  },
  "security": [
    {
      "oauth2_auth": [
        "https://graph.microsoft.com/.default"
      ]
    }
  ],
  "paths": {
    "/search": {
      "post": {
        "operationId": "SearchCompanyData",
        "summary": "Search company data across multiple sources",
        "description": "Search across SharePoint files, Exchange emails, Teams messages, OneDrive documents, and directory information",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "schema": {
              "$ref": "#/definitions/SearchResponse"
            }
          },
          "400": {
            "description": "Bad request - invalid search parameters"
          },
          "401": {
            "description": "Unauthorized - authentication required"
          },
          "403": {
            "description": "Forbidden - insufficient permissions"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/health": {
      "get": {
        "operationId": "HealthCheck",
        "summary": "Check API health status",
        "description": "Returns the current health status of the company data API",
        "responses": {
          "200": {
            "description": "API is healthy",
            "schema": {
              "$ref": "#/definitions/HealthResponse"
            }
          }
        }
      }
    },
    "/sources": {
      "get": {
        "operationId": "GetDataSources",
        "summary": "Get available data sources",
        "description": "Returns a list of all available data sources that can be searched",
        "responses": {
          "200": {
            "description": "Data sources retrieved successfully",
            "schema": {
              "$ref": "#/definitions/DataSourcesResponse"
            }
          }
        }
      }
    },
    "/files/{fileId}": {
      "get": {
        "operationId": "GetFileContent",
        "summary": "Get file content by ID",
        "description": "Retrieve the content of a specific file by its unique identifier",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique identifier of the file"
          }
        ],
        "responses": {
          "200": {
            "description": "File content retrieved successfully",
            "schema": {
              "$ref": "#/definitions/FileContentResponse"
            }
          },
          "404": {
            "description": "File not found"
          }
        }
      }
    },
    "/users/{userId}/activity": {
      "get": {
        "operationId": "GetUserActivity",
        "summary": "Get user activity data",
        "description": "Retrieve recent activity data for a specific user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID or email address"
          },
          {
            "name": "days",
            "in": "query",
            "type": "integer",
            "default": 7,
            "description": "Number of days to look back for activity data"
          }
        ],
        "responses": {
          "200": {
            "description": "User activity retrieved successfully",
            "schema": {
              "$ref": "#/definitions/UserActivityResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SearchRequest": {
      "type": "object",
      "required": [
        "query",
        "dataSource"
      ],
      "properties": {
        "query": {
          "type": "string",
          "description": "The search query to execute",
          "example": "budget planning 2025"
        },
        "dataSource": {
          "type": "string",
          "enum": [
            "files",
            "emails",
            "teams",
            "calendar",
            "directory",
            "all"
          ],
          "description": "The data source to search",
          "example": "files"
        },
        "maxResults": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 10,
          "description": "Maximum number of results to return"
        },
        "dateRange": {
          "type": "object",
          "properties": {
            "start": {
              "type": "string",
              "format": "date-time",
              "description": "Start date for the search range"
            },
            "end": {
              "type": "string",
              "format": "date-time",
              "description": "End date for the search range"
            }
          }
        },
        "filters": {
          "type": "object",
          "properties": {
            "author": {
              "type": "string",
              "description": "Filter by author email or name"
            },
            "fileType": {
              "type": "string",
              "description": "Filter by file extension (e.g., 'docx', 'xlsx')"
            },
            "site": {
              "type": "string",
              "description": "Filter by SharePoint site name"
            }
          }
        }
      }
    },
    "SearchResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Whether the search was successful"
        },
        "query": {
          "type": "string",
          "description": "The original search query"
        },
        "dataSource": {
          "type": "string",
          "description": "The data source that was searched"
        },
        "totalResults": {
          "type": "integer",
          "description": "Total number of results found"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SearchResult"
          }
        },
        "executedAt": {
          "type": "string",
          "format": "date-time",
          "description": "When the search was executed"
        },
        "processingTime": {
          "type": "string",
          "description": "Time taken to process the search"
        }
      }
    },
    "SearchResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the result"
        },
        "title": {
          "type": "string",
          "description": "Title or name of the item"
        },
        "content": {
          "type": "string",
          "description": "Preview of the content"
        },
        "source": {
          "type": "string",
          "description": "Source system (SharePoint, Exchange, Teams, etc.)"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "When the item was last modified"
        },
        "author": {
          "type": "string",
          "description": "Author or creator of the item"
        },
        "url": {
          "type": "string",
          "description": "Direct URL to access the item"
        },
        "relevanceScore": {
          "type": "number",
          "description": "Relevance score for the search query"
        },
        "fileType": {
          "type": "string",
          "description": "File type or content type"
        },
        "size": {
          "type": "integer",
          "description": "Size in bytes (for files)"
        }
      }
    },
    "HealthResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "healthy",
            "degraded",
            "unhealthy"
          ],
          "description": "Current health status"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "When the health check was performed"
        },
        "version": {
          "type": "string",
          "description": "API version"
        },
        "services": {
          "type": "object",
          "description": "Status of dependent services",
          "properties": {
            "microsoftGraph": {
              "type": "string",
              "enum": [
                "healthy",
                "degraded",
                "unhealthy"
              ]
            },
            "azureKeyVault": {
              "type": "string",
              "enum": [
                "healthy",
                "degraded",
                "unhealthy"
              ]
            },
            "applicationInsights": {
              "type": "string",
              "enum": [
                "healthy",
                "degraded",
                "unhealthy"
              ]
            }
          }
        }
      }
    },
    "DataSourcesResponse": {
      "type": "object",
      "properties": {
        "dataSources": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Data source identifier"
              },
              "name": {
                "type": "string",
                "description": "Human-readable name"
              },
              "description": {
                "type": "string",
                "description": "Description of the data source"
              },
              "available": {
                "type": "boolean",
                "description": "Whether the data source is currently available"
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Required permissions to access this data source"
              }
            }
          }
        }
      }
    },
    "FileContentResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "File identifier"
        },
        "name": {
          "type": "string",
          "description": "File name"
        },
        "content": {
          "type": "string",
          "description": "File content (text-based files) or base64 encoded content"
        },
        "mimeType": {
          "type": "string",
          "description": "MIME type of the file"
        },
        "size": {
          "type": "integer",
          "description": "File size in bytes"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time",
          "description": "When the file was last modified"
        },
        "downloadUrl": {
          "type": "string",
          "description": "Direct download URL for the file"
        }
      }
    },
    "UserActivityResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "User identifier"
        },
        "displayName": {
          "type": "string",
          "description": "User display name"
        },
        "activities": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "activityType": {
                "type": "string",
                "enum": [
                  "file_accessed",
                  "email_sent",
                  "meeting_attended",
                  "teams_message",
                  "file_modified"
                ],
                "description": "Type of activity"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time",
                "description": "When the activity occurred"
              },
              "resourceName": {
                "type": "string",
                "description": "Name of the resource involved"
              },
              "resourceUrl": {
                "type": "string",
                "description": "URL to the resource"
              },
              "details": {
                "type": "string",
                "description": "Additional details about the activity"
              }
            }
          }
        },
        "summary": {
          "type": "object",
          "properties": {
            "totalActivities": {
              "type": "integer",
              "description": "Total number of activities"
            },
            "filesAccessed": {
              "type": "integer",
              "description": "Number of files accessed"
            },
            "emailsSent": {
              "type": "integer",
              "description": "Number of emails sent"
            },
            "meetingsAttended": {
              "type": "integer",
              "description": "Number of meetings attended"
            },
            "teamsMessages": {
              "type": "integer",
              "description": "Number of Teams messages sent"
            }
          }
        }
      }
    }
  }
}
